/:
  post:
    summary: Create project
    tags:
      - WebApp Project
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: COVID-19
              task:
                type: string
                enum: ['classification_pylon_1024', 'covid19_admission']
              description:
                type: string
                example: Model for disease classification
              predClasses:
                type: array
                items:
                  type: string
                  example: Nodule
                summary: For user to view in frontend, do not have to be the same with the actual prediction class from model.
              head:
                type: array
                items:
                  type: string
                  example: 628b2f93d001f72cf2d0625f
                summary: User's ID
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/successResponse"
      400:
        description: Invalid input
        content:
          application/json:
              schema:
                $ref: "#/components/badReqResponse"
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: "#/components/unauthorizedResponse"
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: "#/components/errorResponse"
  patch:
    summary: Update project by id
    tags:
      - WebApp Project
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                example: 628b2f93d001f72cf2d0625f
              name:
                type: string
                example: COVID-19
              task:
                type: string
                enum: ['classification_pylon_1024', 'covid19_admission']
              description:
                type: string
                example: Model for disease classification
              predClasses:
                type: array
                items:
                  type: string
                  example: Nodule
                summary: For user to view in frontend, do not have to be the same with the actual prediction class from model.
              head:
                type: array
                items:
                  type: string
                  example: 628b2f93d001f72cf2d06250
                summary: User's ID
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/successResponse"
      400:
        description: Invalid input
        content:
          application/json:
              schema:
                $ref: "#/components/badReqResponse"
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: "#/components/unauthorizedResponse"
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: "#/components/errorResponse"
  get:
    summary: Get all projects
    tags:
      - WebApp Project
    security:
      - bearerAuth: []
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/successResponse"
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: "#/components/unauthorizedResponse"
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: "#/components/errorResponse"

/manageUser:
  patch:
    summary: Manage users in project
    tags:
      - WebApp Project
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                example: 628b2f93d001f72cf2d0625f
                summary: Project's ID
              users:
                type: array
                items:
                  type: string
                  example: 628b2f93d001f72cf2d06250
                summary: User's ID
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/successResponse"
      400:
        description: Invalid input
        content:
          application/json:
              schema:
                $ref: "#/components/badReqResponse"
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: "#/components/unauthorizedResponse"
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: "#/components/errorResponse"

/getTasks:
  get:
    summary: Get all AI tasks
    tags:
      - WebApp Project
    security:
      - bearerAuth: []
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/successResponse"
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: "#/components/unauthorizedResponse"
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: "#/components/errorResponse"

/getByUserId:
  get:
    summary: Get project by user id
    tags:
      - WebApp Project
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        schema:
          type: string
          example: 628b2f93d001f72cf2d0625f
        description: User's ID
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/successResponse"
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: "#/components/unauthorizedResponse"
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: "#/components/errorResponse"

/getById:
  get:
    summary: Get project by id
    tags:
      - WebApp Project
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: project_id
        schema:
          type: string
          example: 628b2f93d001f72cf2d0625f
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/successResponse"
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: "#/components/unauthorizedResponse"
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: "#/components/errorResponse"

/deleteById:
  delete:
    summary: Delete project by id
    tags:
      - WebApp Project
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: project_id
        schema:
          type: string
          example: 628b2f93d001f72cf2d0625f
    responses:
      200:
        description: Success
        content:
          application/json:
            schema:
              $ref: "#/components/successResponse"
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: "#/components/unauthorizedResponse"
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: "#/components/errorResponse"

components:
  successResponse:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      data:
        type: object
  badReqResponse:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
  unauthorizedResponse:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
  errorResponse:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      error:
        type: string